From 9ce2038eec7ef21ce07f2f0ddde13782635c1821 Mon Sep 17 00:00:00 2001
From: Drew Moseley <drew.moseley@northern.tech>
Date: Wed, 20 Dec 2017 09:53:16 -0500
Subject: [PATCH] Generic boot code for Mender.

Signed-off-by: Kristian Amlie <kristian.amlie@mender.io>
Signed-off-by: Maciej Borzecki <maciej.borzecki@rndity.com>
Signed-off-by: Drew Moseley <drew.moseley@northern.tech>
---
 include/config_mender.h |  83 +++++++++++++++++++++++++++++++++++++++
 include/env_mender.h    | 102 ++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 185 insertions(+)
 create mode 100644 include/config_mender.h
 create mode 100644 include/env_mender.h

diff --git a/include/config_mender.h b/include/config_mender.h
new file mode 100644
index 0000000..63a32a6
--- /dev/null
+++ b/include/config_mender.h
@@ -0,0 +1,83 @@
+/*
+  Copyright 2017 Northern.tech AS
+
+  This program is free software; you can redistribute it and/or
+  modify it under the terms of the GNU General Public License
+  as published by the Free Software Foundation; either version 2
+  of the License, or (at your option) any later version.
+
+  This program is distributed in the hope that it will be useful,
+  but WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+  GNU General Public License for more details.
+
+  You should have received a copy of the GNU General Public License
+  along with this program; if not, write to the Free Software
+  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+*/
+
+#ifndef HEADER_CONFIG_MENDER_H
+#define HEADER_CONFIG_MENDER_H
+
+/* Avoid Mender specific code if we are just probing for configuration. */
+#ifndef MENDER_AUTO_PROBING
+
+#include <config_mender_defines.h>
+
+#if !defined(CONFIG_ENV_IS_IN_MMC) && !defined(CONFIG_ENV_IS_IN_NAND) && !defined(CONFIG_ENV_IS_IN_FLASH)
+# error CONFIG_ENV_IS_IN_MMC, CONFIG_ENV_IS_IN_NAND or CONFIG_ENV_IS_IN_FLASH is required for Mender to work
+#endif
+
+#ifndef CONFIG_BOOTCOUNT_LIMIT
+# error CONFIG_BOOTCOUNT_LIMIT is required for Mender to work
+#endif
+
+/* Currently Mender needs bootcount to reside in environment. */
+#ifndef CONFIG_BOOTCOUNT_ENV
+# error CONFIG_BOOTCOUNT_ENV is required for Mender to work
+#endif
+
+#ifdef CONFIG_SYS_MMC_ENV_DEV
+# error CONFIG_SYS_MMC_ENV_DEV should not be defined explicitly (will be auto-configured).
+#endif
+#ifdef CONFIG_SYS_MMC_ENV_PART
+# error CONFIG_SYS_MMC_ENV_PART should not be defined explicitly (will be auto-configured).
+#endif
+#ifdef CONFIG_ENV_OFFSET
+# error CONFIG_ENV_OFFSET should not be defined explicitly (will be auto-configured).
+#endif
+#ifdef CONFIG_ENV_OFFSET_REDUND
+# error CONFIG_ENV_OFFSET_REDUND should not be defined explicitly (will be auto-configured).
+#endif
+
+#if MENDER_BOOTENV_SIZE != CONFIG_ENV_SIZE
+# error 'CONFIG_ENV_SIZE' define must be equal to bitbake variable 'BOOTENV_SIZE' set in U-Boot build recipe.
+#endif
+
+#ifdef MENDER_BOOTENV_RANGE
+
+#ifndef CONFIG_ENV_RANGE
+#error bitbake variable 'BOOTENV_RANGE' is set U-Boot recipe, but CONFIG_ENV_RANGE is not set in configuration
+#endif  /* CONFIG_ENV_RANGE */
+
+#if MENDER_BOOTENV_RANGE != CONFIG_ENV_RANGE
+#error 'CONFIG_ENV_RANGE' define must be equal to bitbake variable 'BOOTENV_RANGE' set in U-Boot build recipe.
+#endif
+
+#else
+
+#ifdef CONFIG_ENV_RANGE
+#error CONFIG_ENV_RANGE is set but BOOTENV_RANGE is not configured in U-Boot build recipe.
+#endif
+
+#endif  /* MENDER_BOOTENV_RANGE */
+
+#define CONFIG_SYS_MMC_ENV_DEV   MENDER_UBOOT_STORAGE_DEVICE
+/* Use MMC partition zero to select whole user area of memory card. */
+#define CONFIG_SYS_MMC_ENV_PART  MENDER_UBOOT_STORAGE_DEVICE_PART
+#define CONFIG_ENV_OFFSET        MENDER_UBOOT_ENV_STORAGE_DEVICE_OFFSET_1
+#define CONFIG_ENV_OFFSET_REDUND MENDER_UBOOT_ENV_STORAGE_DEVICE_OFFSET_2
+
+#endif /* !MENDER_AUTO_PROBING */
+
+#endif /* HEADER_CONFIG_MENDER_H */
diff --git a/include/env_mender.h b/include/env_mender.h
new file mode 100644
index 0000000..705c39e
--- /dev/null
+++ b/include/env_mender.h
@@ -0,0 +1,102 @@
+/*
+  Copyright 2017 Northern.tech AS
+
+  This program is free software; you can redistribute it and/or
+  modify it under the terms of the GNU General Public License
+  as published by the Free Software Foundation; either version 2
+  of the License, or (at your option) any later version.
+
+  This program is distributed in the hope that it will be useful,
+  but WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+  GNU General Public License for more details.
+
+  You should have received a copy of the GNU General Public License
+  along with this program; if not, write to the Free Software
+  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+*/
+
+#ifndef HEADER_ENV_MENDER_H
+#define HEADER_ENV_MENDER_H
+
+/* Avoid Mender specific code if we are just probing for configuration. */
+#ifdef MENDER_AUTO_PROBING
+#define MENDER_ENV_SETTINGS
+#else
+
+#include <config_mender_defines.h>
+
+#ifdef MENDER_NO_DEFAULT_ALTBOOTCMD
+# define MENDER_DEFAULT_ALTBOOTCMD
+#else
+# define MENDER_DEFAULT_ALTBOOTCMD "altbootcmd=run mender_altbootcmd; " \
+    "run bootcmd\0"
+#endif
+
+#define MENDER_ENV_SETTINGS                                             \
+    MENDER_DEFAULT_ALTBOOTCMD                                           \
+    "bootlimit=1\0"                                                     \
+    "bootcount=0\0"                                                     \
+                                                                        \
+    "upgrade_available=0\0"                                             \
+                                                                        \
+    "mender_mtd_ubi_dev_name=" MENDER_MTD_UBI_DEVICE_NAME "\0"          \
+                                                                        \
+    "mender_boot_part=" __stringify(MENDER_ROOTFS_PART_A_NUMBER) "\0"   \
+                                                                        \
+    "mender_uboot_boot=" MENDER_UBOOT_STORAGE_INTERFACE " " __stringify(MENDER_UBOOT_STORAGE_DEVICE) ":" __stringify(MENDER_BOOT_PART_NUMBER) "\0" \
+                                                                        \
+    "mender_uboot_if=" MENDER_UBOOT_STORAGE_INTERFACE "\0"              \
+                                                                        \
+    "mender_uboot_dev=" __stringify(MENDER_UBOOT_STORAGE_DEVICE) "\0"   \
+                                                                        \
+    "mender_boot_kernel_type=" MENDER_BOOT_KERNEL_TYPE "\0"             \
+                                                                        \
+    "mender_kernel_name=" MENDER_KERNEL_NAME "\0"                       \
+                                                                        \
+    "mender_dtb_name=" MENDER_DTB_NAME "\0"                             \
+                                                                        \
+    "mender_setup="                                                     \
+    "setenv mender_kernel_root " MENDER_STORAGE_DEVICE_BASE "${mender_boot_part}; "    \
+    "if test ${mender_boot_part} = " __stringify(MENDER_ROOTFS_PART_A_NUMBER) "; "     \
+    "then "                                                                            \
+    "setenv mender_boot_part_name " MENDER_ROOTFS_PART_A_NAME "; "                     \
+    "else "                                                                             \
+    "setenv mender_boot_part_name " MENDER_ROOTFS_PART_B_NAME "; "                     \
+    "fi; "                                                                             \
+    "setenv mender_kernel_root_name ${mender_boot_part_name}; "         \
+    "setenv mender_uboot_root " MENDER_UBOOT_STORAGE_INTERFACE " " __stringify(MENDER_UBOOT_STORAGE_DEVICE) ":${mender_boot_part}; " \
+    "setenv mender_uboot_root_name ${mender_boot_part_name}; "          \
+    "setenv expand_bootargs \"setenv bootargs \\\\\"${bootargs}\\\\\"\"; "              \
+    "run expand_bootargs; "                                             \
+    "setenv expand_bootargs\0"                                          \
+                                                                        \
+    "mender_altbootcmd="                                                \
+    "if test ${mender_boot_part} = " __stringify(MENDER_ROOTFS_PART_A_NUMBER) "; "     \
+    "then "                                                                            \
+    "setenv mender_boot_part " __stringify(MENDER_ROOTFS_PART_B_NUMBER) "; "           \
+    "else "                                                                            \
+    "setenv mender_boot_part " __stringify(MENDER_ROOTFS_PART_A_NUMBER) "; "           \
+    "fi; "                                                              \
+    "setenv upgrade_available 0; "                                      \
+    "saveenv; "                                                         \
+    "run mender_setup\0"                                                \
+                                                                        \
+    "mender_try_to_recover="                                            \
+    "if test ${upgrade_available} = 1; "                                \
+    "then reset; "                                                      \
+    "fi\0"
+
+#define CONFIG_MENDER_BOOTCOMMAND                                       \
+    "run mender_setup; "                                                \
+    "setenv bootargs root=${mender_kernel_root} ${bootargs}; "          \
+    "if test \"${fdt_addr_r}\" != \"\"; then "                          \
+    "load ${mender_uboot_root} ${fdt_addr_r} /boot/${mender_dtb_name}; " \
+    "fi; "                                                              \
+    "load ${mender_uboot_root} ${kernel_addr_r} /boot/${mender_kernel_name}; " \
+    "${mender_boot_kernel_type} ${kernel_addr_r} - ${fdt_addr_r}; "     \
+    "run mender_try_to_recover"
+
+#endif /* !MENDER_AUTO_PROBING */
+
+#endif /* HEADER_ENV_MENDER_H */
-- 
2.7.4

