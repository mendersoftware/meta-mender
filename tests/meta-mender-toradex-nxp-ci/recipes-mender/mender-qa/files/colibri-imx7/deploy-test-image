#!/bin/bash

set -e

. ${DATADIR}/common
maybe_verbose

uboot_part="u-boot1 u-boot2"
uboot_env_part="u-boot-env"
image_part="ubi"

SOURCE_DIR=${SOURCE_DIR:-/tmp}
UBOOT_FILE=${UBOOT_FILE:-u-boot-nand.imx}
IMAGE_FILE=${IMAGE_FILE:-core-image-minimal-colibri-imx7-mender.ubimg}
UBOOT_ERASE_ENV=

UBOOT_SOURCE_FILE=${SOURCE_DIR}/${UBOOT_FILE}
IMAGE_SOURCE_FILE=${SOURCE_DIR}/${IMAGE_FILE}

if [ -e "${UBOOT_SOURCE_FILE}" ]; then
    for part in $uboot_part; do
        mtd_dev=$(find_mtd_dev $part)
        if [ -n "$mtd_dev" ]; then
            log "writing u-boot image $UBOOT_FILE to partition $part, device $mtd_dev"
            flashcp -v ${UBOOT_SOURCE_FILE} ${mtd_dev}
            if [ -z "${UBOOT_ERASE_ENV}" ]; then
                UBOOT_ERASE_ENV=true
            fi
        fi
    done
else
    log "no u-boot image to deploy"
fi

if [ "${UBOOT_ERASE_ENV}" = "true" ]; then
    mtd_env_dev=$(find_mtd_dev $uboot_env_part)
    if [ -n "$mtd_env_dev" ]; then
        log "erasing u-boot environment"
        flash_erase ${mtd_env_dev} 0 0
    fi
else
    log "not erasing u-boot environment"
fi

if [ -e "${IMAGE_SOURCE_FILE}" ]; then
    mtd_image_dev=$(find_mtd_dev $image_part)
    if [ -n "$mtd_image_dev" ]; then
        log "writing image $IMAGE_FILE to partition $image_part, device $mtd_image_dev"
        ubiformat ${mtd_image_dev} -f ${IMAGE_SOURCE_FILE}
    fi
else
    log "no system image to deploy"
fi
